
		//consulta por origem, destino e data
		static ResultSet Lista_voosRota(int aer_icao_destino,int aer_icao_origem, Date voo_data) {
			ResultSet res = null;
			String sql = 	"SELECT pes_nome, voo_id FROM rota, voo, pessoa " +
				   	"WHERE rota.rot_codigo = voo.rot_codigo and" +
				   	"rota.aer_icao_destino = ? and" +
				   	"rota.aer_icao_origem = ? and"; +
				   	"voo.voo_data = ? and";
					"pessoa.pes_cpf = voo.pes_cpf"


			Connect();
			try {
				PreparedStatement stm;
					stm = con.prepareStatement(sql);
					stm.setInt(1, destino);
					stm.setInt(1, origem);
					stm.setDate(1, data);
				    res = stm.executeQuery();
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
			}
			CloseConnection();
			return res;
		}

	//quais voos o comissario participou em um periodo de tempo
	static ResultSet Lista_vooComissario(int com_cpf, date voo_data_minima, date voo_datamaxima) {
		ResultSet res = null;
		String sql = "SELECT * FROM voo, voo_comissarios " +
                  "where voo.voo_id = voo_comissarios.voo_id and " + 
                  "voo_comissarios.com_cpf = ? and " +
                  "voo.voo_data between ? and ?";
		Connect();
		try {
			PreparedStatement stm;
				stm = con.prepareStatement(sql);
				stm.setInt(1, com_cpf);
				stm.setDate(2, voo_data_minima);
				stm.setDate(3, voo_datamaxima;
			    res = stm.executeQuery();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
		}
		CloseConnection();
		return res;
	}
		//lista de passageiros em determinado voo
		static ResultSet Lista passageiros_voo.java(int voo_id) {
		ResultSet res = null;
		String sql = "select passagem.pes_cpf, pessoa.pes_nome from passagem, pessoa"; + 
					 "where passagem.voo_id=? and" +
					 "passagem.pes_cpf = pessoa.pes_cpf";
		Connect();
		try {
			PreparedStatement stm;
			stm = con.prepareStatement(sql);
			stm.setInt(1, voo_id);
			res = stm.executeQuery();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
		}
		CloseConnection();
		return res;
	}
	
	//Soma do peso das bagagens
	static ResultSet Lista peso_das_bagagens.java(int voo_id) {
		ResultSet res = null;
		String sql = "select sum(bagagem.bag_peso) from bagagem"; +
		"where bagagem.pes_cpf"; +
		"in (select passagem.pes_cpf from passagem where passagem.voo_id=?);" 
		Connect();
		try {
			PreparedStatement stm;
				stm = con.prepareStatement(sql);
				stm.setInt(1, passagem.voo_id);
			    res = stm.executeQuery();
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
		}
		CloseConnection();
		return res;
	}
		//Número de passageiros em um voo.
		static ResultSet Lista_total_passageiros(int voo_id) {
			ResultSet res = null;
			String sql = 	"select count(*) from passagem where voo_id=?";


			Connect();
			try {
				PreparedStatement stm;
					stm = con.prepareStatement(sql);
					stm.setInt(1, voo_id);
				    res = stm.executeQuery();
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
			}
			CloseConnection();
			return res;
		}

		
		//Peso total das bagagens de um determinado passageiro
		static ResultSet Lista_peso_bagagem_passageiro(int pes_cpf) {
			ResultSet res = null;
			String sql = 	"select sum(bagagem.bag_peso) from bagagem where pes_cpf= ?";

			Connect();
			try {
				PreparedStatement stm;
					stm = con.prepareStatement(sql);
					stm.setInt(1, pes_cpf);
				    res = stm.executeQuery();
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
			}
			CloseConnection();
			return res;
		}

		//Lista com os voos de determinada rota
		static ResultSet Lista_de_voos(int rot_codigo) {
			ResultSet res = null;
			String sql = 	"select * from voo where rot_codigo=?";


			Connect();
			try {
				PreparedStatement stm;
					stm = con.prepareStatement(sql);
					stm.setInt(1, rot_codigo);
				    res = stm.executeQuery();
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
			}
			CloseConnection();
			return res;
		}

		//total de voos disponiveis em uma rota
		static ResultSet Lista_quantidade_de_voos(int rot_codigo) {
			ResultSet res = null;
			String sql = 	"select count(*) from voo where rot_codigo= ?";

			Connect();
			try {
				PreparedStatement stm;
					stm = con.prepareStatement(sql);
					stm.setInt(1, rot_codigo);
				    res = stm.executeQuery();
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
			}
			CloseConnection();
			return res;
		}

		//Lista com o total de passageiros que pegaram algum voo na rota X.
		static ResultSet Lista_total_passageiros_rota(int rot_codigo) {
			ResultSet res = null;
			String sql = 	"select count (*) from passagem" +
			 				"where passagem.voo_id"; +
			 				" in (select voo.voo_id from voo where rot_codigo= ?);"


			Connect();
			try {
				PreparedStatement stm;
					stm = con.prepareStatement(sql);
					stm.setInt(1, rot_codigo);
				    res = stm.executeQuery();
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
			}
			CloseConnection();
			return res;
		}
	
		//orçamentos das manutenções de uma aeronave específica
		static ResultSet Lista_total_rep_orcamento_oficina(int avi_serial_number) {
			ResultSet res = null;
			String sql = 	"select rep_orcamento from reparo where avi_serial_number= ?"; 


			Connect();
			try {
				PreparedStatement stm;
					stm = con.prepareStatement(sql);
					stm.setInt(1, avi_serial_number);
				    res = stm.executeQuery();
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Não foi possível recuperar os dados", "Erro", JOptionPane.OK_OPTION);
			}
			CloseConnection();
			return res;
		}